user nobody nogroup;

pid /tmp/nginx.pid;

error_log /var/log/nginx.error.log;

worker_processes 1;

events {
	worker_connections 1024;  # increase if you have lots of clients

	accept_mutex off;  # set to 'on' if nginx worker_processes > 1

	use epoll;  # a fast event mechanism for Linux 2.6+
}

http {
	access_log /var/log/nginx.access.log;

	gzip on;

	upstream ctfd_app {
		# fail_timeout=0 always retry ctfd even if it failed
		server ctfd:8000 fail_timeout=0;
	}

	server {
		listen 8000;

		client_max_body_size 4G;

		# Handle Server Sent Events for Notifications.
		location /events {
			chunked_transfer_encoding off;
			proxy_buffering off;
			proxy_cache off;
			proxy_http_version 1.1;
			proxy_pass http://ctfd_app;
			proxy_redirect off;
			proxy_set_header Connection '';
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
			proxy_set_header X-Real-IP $remote_addr;
		}

		# Proxy connections to the application servers.
		location / {
			proxy_pass http://ctfd_app;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Host $server_name;
			proxy_set_header X-Real-IP $remote_addr;
		}
	}
}
